# Generated by Django 5.2.1 on 2025-05-22 01:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConversationState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('next_states', models.JSONField(default=list, help_text='Lista de estados posibles después de este')),
                ('required_data', models.JSONField(default=list, help_text='Datos requeridos para este estado')),
                ('is_final', models.BooleanField(default=False, help_text='Indica si este es un estado final de la conversación')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Texto de la pregunta')),
                ('type', models.CharField(choices=[('open', 'Abierta'), ('multiple_choice', 'Opción Múltiple'), ('numeric', 'Numérica')], default='open', max_length=20)),
                ('options', models.JSONField(blank=True, help_text='Opciones para preguntas de opción múltiple', null=True)),
                ('validation_rules', models.JSONField(blank=True, help_text='Reglas de validación para la respuesta', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('context', models.JSONField(default=dict, help_text='Contexto actual de la conversación')),
                ('current_state', models.CharField(default='initial', help_text='Estado actual de la conversación', max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_text', models.TextField(help_text='Respuesta original del usuario')),
                ('extracted_data', models.JSONField(default=dict, help_text='Datos extraídos de la respuesta')),
                ('is_valid', models.BooleanField(default=True)),
                ('validation_message', models.TextField(blank=True, help_text='Mensaje de validación si la respuesta no es válida', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='conversation.conversation')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responses', to='conversation.question')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
    ]
